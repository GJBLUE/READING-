## 第二章 提供推荐
机器学习就是允许计算机不断地进行学习，对数据中重要的特征进行归纳，并借此得到一个模型。
协作型过滤：一般是对一大群人进行搜索，并从中找出品味相近的人。
### 基于用户的协作型过滤
    1.搜集偏好；
    2.寻找相近用户；
      - 欧几里德距离
        即一个多维度的坐标轴，将数据绘制到坐标轴上，比较其相关距离。
      - 皮尔逊相关度
        该相关系数是判断两组数据和某一直线拟合程度的一种度量。
    3.为评论者打分
    4.推荐物品
    5.匹配商品
### 基于物品的协作型过滤
    **总体思路**:为每件物品预先计算好最为相近的其他物品，当为某位用户提供推荐时，可以查看他曾经评过分的物品。从中挑选出排位靠前的，再构造出一个加权列表。(物品间比较不会像用户那样频繁)。换个角度看待数据，求一本书的评分，可以书当key，而人们的评分当value。基于物品推荐比基于人物推荐更快。
    1.构造物品比较数据集
      找到数据的相似性参数，在考虑算法，比如书中举例，2维数组，求和，求方差，求方差和等等。
    2.获得推荐

## 第三章 获得群组
  **数据聚类**：寻找紧密相关的人，实物或观点，将其可视化的方法。
  **聚类算法**：目标是采集数据，然后从中找出不同的群组。
  **分类聚类**：不断的将最相似的群组两两合并，构造出一个群组的层级结构。树状图就是一种分类聚类。
  **列聚类**：对行或者列上的数据进行聚类，一般最终会转化为矩阵或者树状图。
  **K-均值聚类算法**:先随机确定K个中心位置，然后将将各个数据项分配给最临近的中心点。分配完成后，聚类中心会移动到分配给该聚类的所有节点的平均位置处。然后继续分配，直到此过程不再产生变化。
  多维缩放，为数据集找到一种二维表达形式。

## 第四章 搜索与排名
  **搜索引擎** == 爬虫 + 索引 + 检索，检索是最为奥妙的地方。
  1. 爬虫的设计
    即找到一个搜集文档的方法。
  2. 建立索引
    索引对应于一个列表，其中包含了所有不同的单词，这些单词所在的文档，以及单次在文档中出现的位置。
  3. 建立数据库
    实现索引功能
  4. 在网页中查找单词
  5. 加入索引
  6. 查询
  7. 基于内容的排名
    - 单词频度
      位于擦汗寻条件中的单词在文档中出现的次数能帮助我们判断文档的相关程度。
    - 文档位置
      文档的主题可能会出现在靠近文档的开始处。
    - 单次距离
      如果查询条件中有多个单词，则他们在文档中出现的位置应该靠得很近。
  8. 归一化函数
    对于不同方法的返回结果进行比较，我们需要一种对结果进行归一化处理的办法。即，令它们具有相同的值域或变化方向。
  9. 单词频度
    根据查询条件中的单次在网页中出现的次数对网页进行评价。
  10. 文档位置
    即搜索单词在网页中的位置。
  11. 单词距离
  
### 利用外部回指链接
    1. 简单计数
      在每个网页上统计链接数目，并将链接总数作为针对网页的度量。
    2. PageRank算法
      PageRank通过网络浩瀚的超链接关系来确定一个页面的等级。Google把从A页面到B页面的链接解释为A页面给B页面投票，Google根据投票来源（甚至来源的来源，即链接到A页面的页面）和投票目标的等级来决定新的等级。简单的说，一个高等级的页面可以使其他低等级页面的等级提升。
      一个页面的“得票数”由所有链向它的页面的重要性来决定，到一个页面的超链接相当于对该页投一票。一个页面的PageRank是由所有链向它的页面（“链入页面”）的重要性经过递归算法得到的。一个有较多链入的页面会有较高的等级，相反如果一个页面没有任何链入页面，那么它没有等级。
    3. 
